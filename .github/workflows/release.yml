name: Release

on:
  push:
    tags:
      - 'v*' # v1.0.0, v1.0.1 などのタグでトリガー

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write  # GitHub Release作成に必要
      id-token: write # npm provenance に必要
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Verify package version matches tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if [ "$TAG_VERSION" != "$PACKAGE_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match package.json version ($PACKAGE_VERSION)"
            exit 1
          fi
      
      - name: Check if version exists on npm
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          if npm view @2017takeda/jt-cli@$PACKAGE_VERSION version 2>/dev/null; then
            echo "Version $PACKAGE_VERSION already exists on npm. Skipping publish."
            echo "SKIP_PUBLISH=true" >> $GITHUB_ENV
          else
            echo "Version $PACKAGE_VERSION does not exist. Proceeding with publish."
            echo "SKIP_PUBLISH=false" >> $GITHUB_ENV
          fi
      
      - name: Publish to npm
        if: env.SKIP_PUBLISH == 'false'
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - Check the [CHANGELOG](https://github.com/TAKEDA-Takashi/jt-cli/blob/main/CHANGELOG.md) for details
          draft: false
          prerelease: false